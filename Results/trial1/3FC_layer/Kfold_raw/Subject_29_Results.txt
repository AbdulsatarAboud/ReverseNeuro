-------- INFORMATION ON THE DATA ---------
Shapes
Train Data: (12564, 20, 250) Train Lable: (12564, 1)
Test Data: (451, 20, 250) Test Lable: (451, 1)
***********************************************************************************
Number of NANs in the data
Train Data: 0 Train Lable: 0
Test Data: 0 Test Lable: 0
***********************************************************************************
Some stats on the data
Number of 'non sick' samples: 6282
Count voltage values > 10,000: 0
Count voltage values < -10,000: 0
**************************************** FULL DATASET *******************************************
Number of 'sick' samples: 6733
Number of 'non sick' samples: 6282
Maximum Value in Data Set: 10000.0
Minimum Value in Data Set: -10000.0
Mean Value in Data Set: -5.386165690371478
Standard Daviation in Data Set: 475.4612538057383
************************************* TRAINING DATASET **********************************************
Number of 'sick' samples: 6282
Number of 'non sick' samples: 6282
Maximum Value in Training Set: 10000.0
Minimum Value in Data Set: -10000.0
Mean Value in Data Set: -5.6110017629288755
Standard Daviation in Data Set: 483.82042562233335
*************************************** TESTING DATASET ********************************************
Number of 'sick' samples: 451
Number of 'non sick' samples: 0
Maximum Value in Testing Set: 407.58782958984375
Minimum Value in Data Set: -449.43365478515625
Mean Value in Data Set: 0.8773385571033391
Standard Daviation in Data Set: 51.325202459278685
epoch: 0, lr: 0.01, accuracy: tensor(0.4997, device='cuda:0'), loss: 0.3132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 1, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 2, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 3, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 4, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 5, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 6, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.3132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 7, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 8, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 9, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 10, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 11, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.3132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 12, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 13, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 14, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.3132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 15, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 16, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 17, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 18, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 19, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 20, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 21, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 22, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 23, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 24, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632691383361816, valid accuracy: tensor(0., device='cuda:0')
epoch: 25, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 26, lr: 0.01, accuracy: tensor(0.4992, device='cuda:0'), loss: 1.3132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 27, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 28, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 29, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 30, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.3132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 31, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 32, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 33, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 34, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 35, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 36, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 37, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 38, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 39, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 40, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 41, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 1.0632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 42, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 43, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(1., device='cuda:0')
epoch: 44, lr: 0.01, accuracy: tensor(0.4979, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 45, lr: 0.01, accuracy: tensor(0.4999, device='cuda:0'), loss: 1.3122460842132568, valid accuracy: tensor(0., device='cuda:0')
epoch: 46, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.3132617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 47, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 48, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.5632617473602295, valid accuracy: tensor(0., device='cuda:0')
epoch: 49, lr: 0.01, accuracy: tensor(0.5000, device='cuda:0'), loss: 0.8132617473602295, valid accuracy: tensor(0., device='cuda:0')
